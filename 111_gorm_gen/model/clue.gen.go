// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"

	"gorm.io/gorm"
)

const TableNameClue = "clue"

// Clue mapped from table <clue>
type Clue struct {
	ID               int64          `gorm:"column:id;type:bigint;primaryKey;autoIncrement:true;comment:主键Id" json:"id"`                                 // 主键Id
	CreatedAt        *time.Time     `gorm:"column:created_at;type:datetime(3);comment:创建时间" json:"created_at"`                                          // 创建时间
	UpdatedAt        *time.Time     `gorm:"column:updated_at;type:datetime(3);comment:修改时间" json:"updated_at"`                                          // 修改时间
	DeletedAt        gorm.DeletedAt `gorm:"column:deleted_at;type:datetime(3);index:idx_clue_deleted_at,priority:1;comment:删除时间" json:"deleted_at"`     // 删除时间
	Message          *string        `gorm:"column:message;type:varchar(255);comment:线索信息" json:"message"`                                               // 线索信息
	AccidentType     *string        `gorm:"column:accident_type;type:varchar(255);comment:事故类型" json:"accident_type"`                                   // 事故类型
	URL              *string        `gorm:"column:url;type:varchar(1000);comment:事故视频url" json:"url"`                                                   // 事故视频url
	CrashLevel       *string        `gorm:"column:crash_level;type:varchar(10);comment:碰撞等级" json:"crash_level"`                                        // 碰撞等级
	Distance         *float64       `gorm:"column:distance;type:double;comment:距离4s店的距离" json:"distance"`                                               // 距离4s店的距离
	AccidentAt       *time.Time     `gorm:"column:accident_at;type:datetime(3);comment:事故触发时间" json:"accident_at"`                                      // 事故触发时间
	Longitude        *float64       `gorm:"column:longitude;type:decimal(10,6);comment:事故发生时的经度" json:"longitude"`                                      // 事故发生时的经度
	Latitude         *float64       `gorm:"column:latitude;type:decimal(10,6);comment:事故发生时的纬度" json:"latitude"`                                        // 事故发生时的纬度
	RecorderImei     *string        `gorm:"column:recorder_imei;type:varchar(255);comment:记录仪的imei号" json:"recorder_imei"`                              // 记录仪的imei号
	LocationAccident *string        `gorm:"column:location_accident;type:varchar(255);comment:事故发生时的地点" json:"location_accident"`                       // 事故发生时的地点
	Status           int32          `gorm:"column:status;type:tinyint unsigned;not null;default:1;comment:线索当前状态 新线索默认待处理1，跟进中2，有效3，无效4" json:"status"` // 线索当前状态 新线索默认待处理1，跟进中2，有效3，无效4
	AccountID        int64          `gorm:"column:account_id;type:bigint;not null;index:fk_clue_account_id,priority:1;comment:操作人ID" json:"account_id"` // 操作人ID
	EnterpriseID     *int64         `gorm:"column:enterprise_id;type:bigint;comment:集团id" json:"enterprise_id"`                                         // 集团id
	SubsidiaryID     *int64         `gorm:"column:subsidiary_id;type:bigint;comment:店铺id" json:"subsidiary_id"`                                         // 店铺id
	UpdatedByID      *int64         `gorm:"column:updated_by_id;type:bigint;comment:操作账号Id" json:"updated_by_id"`                                       // 操作账号Id
	CarOwnerRegister *bool          `gorm:"column:car_owner_register;type:tinyint(1);comment:车主端是否注册" json:"car_owner_register"`                        // 车主端是否注册
}

// TableName Clue's table name
func (*Clue) TableName() string {
	return TableNameClue
}
